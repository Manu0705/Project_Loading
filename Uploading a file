# Tic-Tac-Toe Game

# Function to print the current game board
def print_board(board):
    print("---------")
    for i in range(3):
        print("|", " ".join(board[i]), "|")
    print("---------")

# Function to check if a player has won
def check_winner(board, player):
    # Check rows, columns, and diagonals
    for i in range(3):
        if all([board[i][j] == player for j in range(3)]) or \
           all([board[j][i] == player for j in range(3)]):
            return True
    
    if board[0][0] == player and board[1][1] == player and board[2][2] == player:
        return True
    if board[0][2] == player and board[1][1] == player and board[2][0] == player:
        return True
    
    return False

# Function to check if the board is full
def is_board_full(board):
    return all([board[i][j] != " " for i in range(3) for j in range(3)])

# Main function to play the game
def play_game():
    # Initialize the board
    board = [[" " for _ in range(3)] for _ in range(3)]
    current_player = "X"
    
    while True:
        # Display the board
        print_board(board)
        
        # Ask for player input
        print(f"Player {current_player}'s turn")
        row = int(input("Enter the row (0, 1, 2): "))
        col = int(input("Enter the column (0, 1, 2): "))
        
        # Check if the cell is empty
        if board[row][col] != " ":
            print("Cell is already taken. Choose another cell.")
            continue
        
        # Place the player's mark
        board[row][col] = current_player
        
        # Check if the current player has won
        if check_winner(board, current_player):
            print_board(board)
            print(f"Player {current_player} wins!")
            break
        
        # Check if the board is full (tie game)
        if is_board_full(board):
            print_board(board)
            print("It's a tie!")
            break
        
        # Switch to the next player
        current_player = "O" if current_player == "X" else "X"

# Start the game
play_game()
